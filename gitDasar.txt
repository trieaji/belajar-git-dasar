Git status -> Digunakan untuk mengecek perubahan apa saja yang terjadi seperti, ada file yang diubah atau sbg
No Commits yet -> Tidak ada satupun riwayat
nothing to commmit -> Tidak apapun yang bisa disimpan (tidak ada apapun file yg kita ubah)
Untracked files -> Artinya ada file baru
git add (nama file) -> Memindahkan ke staging index
git commit -m "(pesan keterangan)" -> Menambah ke repository secara permanent/Commit ke repository 
git diff -> Digunakan untuk melihat perubahan yang terjadi pada file nya
git add .->Jika menginginkan semua perubahan dipindah ke staging index
git clean -f -> Untuk membatalkan/menghapus penambahan file di staging index
git restore "namafilenya" -> Untuk membatalkan perubahan file di staging index dan juga berguna membatalkan penghapusan file
git restore --staged "namafilenya" -> Mengembalikan file dari staging ke working directory untuk dilakukan perubahan
git log -> Untuk melihat semua riwayat commit
git log --oneline -> Untuk melihat commit log message nya saja (versi sederhana)
git show "hash" -> Untuk melihat detail commit
git diff "hash1" "hash2" -> Untuk membandingkan hasil di commit
git reset <mode> "hash" -> Untuk melakukan reset commit
git commit --amend -> Untuk mengatasi kelupaan pada file yang sudah di commit
git checkout hash -- namafile -> Untuk melihat versi file pada commit sebelumnya
git checkout hash -> Jika kita ingin menuju ke snapshot tertentu
git checkout namabranch -> Jika ingin kembali ke snapshot paling awal
git revert "hash" -> Untuk membatalkan commit yang sudah kita lakukan 
git bale "namafile" -> Untuk mengetahui siapa aja yg mengerjakan sebuah codingan
git branch --show-current -> Untuk melihat branch saat ini
git branch "namabranchnya" -> Untuk membuat branch
git branch --list -> Untuk melihat semua branch yang ada di repository kita
git switch "namabranch" atau git checkout "namabranch" -> Untuk pindah ke branch lain
git branch -m "namabranchbaru" -> Untuk mengubah nama branch, tetapi harus pindah terlebih dahulu ke branch yg ingin kita ubah namanya
git branch -d "namabranch" -> Untuk menghapus branch, kita perlu keluar terlebih dahulu dari branch tersebut
git merge "namabranch" -> Untuk melakukan branch
git merge --abort -> Jika ingin membatalkan merge
git cherry-pick commitId -> Jika tidak ingin merge semua perubahan
git tag "tagName" commitId -> Untuk membuat tag
git tag -l -> Untuk menampilkan semua tag
git checkout tagName -> Untuk melihat snapshot sebelumnya di Git
git tag -d namatag -> Menghapus tag 
git stash push -m "(Pesan keterangan)" -> Untuk menyimpan perubahan ke stash
git stash list -> Untuk melihat semua stash
git stash show stashId -> Untuk melihat perubahan yang terjadi di stash
git stash apply stashId -> Untuk mengambil perubahan di stash
git stash drop stashId -> Untuk menghapus stash
git stash clear -> Untuk menghapus semua stash
git rebase "namabranch" -> Untuk melakukan rebase
git merge --squash "namabranch" -> Untuk melakukan squash ketika merge
ssh-keygen -> Untuk membuat ssh key dan membuanya di terminal
git remote add "nama" ssh-url -> Untuk menambah repository. Biasanya untuk "nama" orang-orang menggunakan yg umum yaitu, "origin"
git remote -> Untuk melihat remote repository yang ada di git project
git remote get-url "nama" -> Untuk melihat detail remote repository. Biasanya untuk "nama" orang-orang menggunakan yg umum yaitu, "origin"
git remote rm "nama" -> Untuk menghapus remote repository. Biasanya untuk "nama" orang-orang menggunakan yg umum yaitu, "origin"
git push namaremote localbranch -> Untuk mengirim perubahan branch ke remote repository dengan nama branch yang sama. Biasanya untuk "namaremote" orang-orang menggunakan yg umum yaitu, "origin"
git push namaremote localbranch:remotebranch -> Untuk mengirim perubahn branch ke remote repository dengan nama branch yang berbeda. Biasanya untuk "namaremote" orang-orang menggunakan yg umum yaitu, "origin"
git push origin --all -> Untuk mengirim semua branch yg ada di local kita
git push --delete origin "namabranch" -> Untuk menghapus branch yang ada di remote
git clone urlremoterepository -> Untuk melakukan clone
git clone urlremoterepository "namafolder" -> Jika ingin melakukan clone, dengan nama folder yang berbeda dengan nama project remote repository
git branch -r -> Jika ingin melihat semua daftar branch yang ada di remote repository
git branch -a -> Jika ingin melihat semua branch di local dan remote
git checkout -b localbranch namaremote/remotebranch -> Untuk membuat local branch yang berisikn data dari remote branch/Membuat branch dari branch yg sudah ada di remote repository nya
git fetch namaremote -> Melakukan fetch untuk semua branch di remote repository
git fetch namaremote remotebranch -> Jika ingin melakukan fetch untuk branch tertentu saja di remote
git pull origin namaremotebranch -> Untuk melakukan pull


The Three States
Git memiliki tiga state terhadap file kita: modified, staged, commited
- Modified artinya kita mengubah (menambah, mengedit, menghapus) file, namun belum disimpan secara permanen ke repository
- Staged artinya kita menandai modifikasi yang kita lakukan terhadap file akan disimpan secara permanen ke repository
- Committed artinya data sudah aman disimpan di repository

Three Section
Tiga state sebelumnya di dalam Git dilakukan di section yang berbeda-beda, yaitu Working Directory, Staging Area dan Repository
- Saat kita melakukan modifikasi file, itu dilakukan di working directory
- Staging Area merupakan section dimana file sudah disiapkan untuk disimpan secara permanen, di Staging Area semua informasi perubahan file akan disimpan
- Repository merupakan tempat dimana semua file dan database riwayat versi file disimpan

Mode
Git memiliki tiga mode untuk melakukan reset commit
soft -> Perubahannya masih ada di staging index
mixed -> Perubahannya masih ada di working directory
hard -> Perubahannya otomatis hilang semuanya

.gitignore -> Berguna untuk melakukan igonere file yang tidak penting yg dimasukkan ke repository

branch "feature/a" merubah file1.txt
branch "feature/a" merubah file2.txt
branch "feature/b" merubah file1.txt
branch "feature/b" merubah file3.txt

branch "feature/c" merubah file1.txt
branch "feature/c" merubah file2.txt
branch "feature/c" merubah file3.txt

STASH -> Perubahan file yang belum siap commit dan juga tidak mau dihapus
Stash berfungsi untuk penyimpanan sementara (jika kita masih ragu terhadap file yg belum siap commit dan juga tidak mau dihapus)
branch "master" merubah file1.txt
branch "feature/d" merubah file1.txt -> lngsung commit supaya berada di staging index
branch "feature/d" merubah file2.txt -> blum di commit

Rebase
Rebase berfungsi selayaknya merge tapi kerja rebase terbalik dengan cara kerja merge
branch "master" merubah file1.txt
branch "feature/rebase" merubah file2.txt -> lalu commit
branch "feature/rebase" merubah file3.txt -> lalu commit

Squash berfungsi untuk melakukan penggabungan commit tersebut menjadi 1 commit saja
branch "master" merubah version.txt -> lalu commit
branch "feature/merge-squash" merubah file1.txt -> lalu commit
branch "feature/merge-squash" merubah file2.txt -> lalu commit